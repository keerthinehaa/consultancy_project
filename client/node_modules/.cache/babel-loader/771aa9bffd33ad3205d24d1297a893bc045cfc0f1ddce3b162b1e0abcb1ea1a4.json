{"ast":null,"code":"var __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\nimport { VERSION } from \"./version.mjs\";\nimport { Stream } from \"./lib/streaming.mjs\";\nimport { GroqError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError } from \"./error.mjs\";\nimport { kind as shimsKind, getDefaultAgent, fetch, init } from \"./_shims/index.mjs\";\n// try running side effects outside of _shims/index to workaround https://github.com/vercel/next.js/issues/76881\ninit();\nimport { isBlobLike, isMultipartBody } from \"./uploads.mjs\";\nexport { maybeMultipartFormRequestOptions, multipartFormRequestOptions, createForm } from \"./uploads.mjs\";\nasync function defaultParseResponse(props) {\n  const {\n    response\n  } = props;\n  if (props.options.stream) {\n    debug('response', response.status, response.url, response.headers, response.body);\n    // Note: there is an invariant here that isn't represented in the type system\n    // that if you set `stream: true` the response type must also be `Stream<T>`\n    if (props.options.__streamClass) {\n      return props.options.__streamClass.fromSSEResponse(response, props.controller);\n    }\n    return Stream.fromSSEResponse(response, props.controller);\n  }\n  // fetch refuses to read the body when the status code is 204.\n  if (response.status === 204) {\n    return null;\n  }\n  if (props.options.__binaryResponse) {\n    return response;\n  }\n  const contentType = response.headers.get('content-type');\n  const mediaType = contentType?.split(';')[0]?.trim();\n  const isJSON = mediaType?.includes('application/json') || mediaType?.endsWith('+json');\n  if (isJSON) {\n    const json = await response.json();\n    debug('response', response.status, response.url, response.headers, json);\n    return json;\n  }\n  const text = await response.text();\n  debug('response', response.status, response.url, response.headers, text);\n  // TODO handle blob, arraybuffer, other content types, etc.\n  return text;\n}\n/**\r\n * A subclass of `Promise` providing additional helper methods\r\n * for interacting with the SDK.\r\n */\nexport class APIPromise extends Promise {\n  constructor(responsePromise, parseResponse = defaultParseResponse) {\n    super(resolve => {\n      // this is maybe a bit weird but this has to be a no-op to not implicitly\n      // parse the response body; instead .then, .catch, .finally are overridden\n      // to parse the response\n      resolve(null);\n    });\n    this.responsePromise = responsePromise;\n    this.parseResponse = parseResponse;\n  }\n  _thenUnwrap(transform) {\n    return new APIPromise(this.responsePromise, async props => transform(await this.parseResponse(props), props));\n  }\n  /**\r\n   * Gets the raw `Response` instance instead of parsing the response\r\n   * data.\r\n   *\r\n   * If you want to parse the response body but still get the `Response`\r\n   * instance, you can use {@link withResponse()}.\r\n   *\r\n   * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\r\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\r\n   * or add one of these imports before your first `import â€¦ from 'groq-sdk'`:\r\n   * - `import 'groq-sdk/shims/node'` (if you're running on Node)\r\n   * - `import 'groq-sdk/shims/web'` (otherwise)\r\n   */\n  asResponse() {\n    return this.responsePromise.then(p => p.response);\n  }\n  /**\r\n   * Gets the parsed response data and the raw `Response` instance.\r\n   *\r\n   * If you just want to get the raw `Response` instance without parsing it,\r\n   * you can use {@link asResponse()}.\r\n   *\r\n   *\r\n   * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\r\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\r\n   * or add one of these imports before your first `import â€¦ from 'groq-sdk'`:\r\n   * - `import 'groq-sdk/shims/node'` (if you're running on Node)\r\n   * - `import 'groq-sdk/shims/web'` (otherwise)\r\n   */\n  async withResponse() {\n    const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n    return {\n      data,\n      response\n    };\n  }\n  parse() {\n    if (!this.parsedPromise) {\n      this.parsedPromise = this.responsePromise.then(this.parseResponse);\n    }\n    return this.parsedPromise;\n  }\n  then(onfulfilled, onrejected) {\n    return this.parse().then(onfulfilled, onrejected);\n  }\n  catch(onrejected) {\n    return this.parse().catch(onrejected);\n  }\n  finally(onfinally) {\n    return this.parse().finally(onfinally);\n  }\n}\nexport class APIClient {\n  constructor({\n    baseURL,\n    maxRetries = 2,\n    timeout = 60000,\n    // 1 minute\n    httpAgent,\n    fetch: overriddenFetch\n  }) {\n    this.baseURL = baseURL;\n    this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n    this.timeout = validatePositiveInteger('timeout', timeout);\n    this.httpAgent = httpAgent;\n    this.fetch = overriddenFetch ?? fetch;\n  }\n  authHeaders(opts) {\n    return {};\n  }\n  /**\r\n   * Override this to add your own default headers, for example:\r\n   *\r\n   *  {\r\n   *    ...super.defaultHeaders(),\r\n   *    Authorization: 'Bearer 123',\r\n   *  }\r\n   */\n  defaultHeaders(opts) {\n    return {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'User-Agent': this.getUserAgent(),\n      ...getPlatformHeaders(),\n      ...this.authHeaders(opts)\n    };\n  }\n  /**\r\n   * Override this to add your own headers validation:\r\n   */\n  validateHeaders(headers, customHeaders) {}\n  defaultIdempotencyKey() {\n    return `stainless-node-retry-${uuid4()}`;\n  }\n  get(path, opts) {\n    return this.methodRequest('get', path, opts);\n  }\n  post(path, opts) {\n    return this.methodRequest('post', path, opts);\n  }\n  patch(path, opts) {\n    return this.methodRequest('patch', path, opts);\n  }\n  put(path, opts) {\n    return this.methodRequest('put', path, opts);\n  }\n  delete(path, opts) {\n    return this.methodRequest('delete', path, opts);\n  }\n  methodRequest(method, path, opts) {\n    return this.request(Promise.resolve(opts).then(async opts => {\n      const body = opts && isBlobLike(opts?.body) ? new DataView(await opts.body.arrayBuffer()) : opts?.body instanceof DataView ? opts.body : opts?.body instanceof ArrayBuffer ? new DataView(opts.body) : opts && ArrayBuffer.isView(opts?.body) ? new DataView(opts.body.buffer) : opts?.body;\n      return {\n        method,\n        path,\n        ...opts,\n        body\n      };\n    }));\n  }\n  getAPIList(path, Page, opts) {\n    return this.requestAPIList(Page, {\n      method: 'get',\n      path,\n      ...opts\n    });\n  }\n  calculateContentLength(body) {\n    if (typeof body === 'string') {\n      if (typeof Buffer !== 'undefined') {\n        return Buffer.byteLength(body, 'utf8').toString();\n      }\n      if (typeof TextEncoder !== 'undefined') {\n        const encoder = new TextEncoder();\n        const encoded = encoder.encode(body);\n        return encoded.length.toString();\n      }\n    } else if (ArrayBuffer.isView(body)) {\n      return body.byteLength.toString();\n    }\n    return null;\n  }\n  buildRequest(inputOptions, {\n    retryCount = 0\n  } = {}) {\n    const options = {\n      ...inputOptions\n    };\n    const {\n      method,\n      path,\n      query,\n      headers = {}\n    } = options;\n    const body = ArrayBuffer.isView(options.body) || options.__binaryRequest && typeof options.body === 'string' ? options.body : isMultipartBody(options.body) ? options.body.body : options.body ? JSON.stringify(options.body, null, 2) : null;\n    const contentLength = this.calculateContentLength(body);\n    const url = this.buildURL(path, query);\n    if ('timeout' in options) validatePositiveInteger('timeout', options.timeout);\n    options.timeout = options.timeout ?? this.timeout;\n    const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n    const minAgentTimeout = options.timeout + 1000;\n    if (typeof httpAgent?.options?.timeout === 'number' && minAgentTimeout > (httpAgent.options.timeout ?? 0)) {\n      // Allow any given request to bump our agent active socket timeout.\n      // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n      // and without mutating agent we would need to create more of them.\n      // This tradeoff optimizes for performance.\n      httpAgent.options.timeout = minAgentTimeout;\n    }\n    if (this.idempotencyHeader && method !== 'get') {\n      if (!inputOptions.idempotencyKey) inputOptions.idempotencyKey = this.defaultIdempotencyKey();\n      headers[this.idempotencyHeader] = inputOptions.idempotencyKey;\n    }\n    const reqHeaders = this.buildHeaders({\n      options,\n      headers,\n      contentLength,\n      retryCount\n    });\n    const req = {\n      method,\n      ...(body && {\n        body: body\n      }),\n      headers: reqHeaders,\n      ...(httpAgent && {\n        agent: httpAgent\n      }),\n      // @ts-ignore node-fetch uses a custom AbortSignal type that is\n      // not compatible with standard web types\n      signal: options.signal ?? null\n    };\n    return {\n      req,\n      url,\n      timeout: options.timeout\n    };\n  }\n  buildHeaders({\n    options,\n    headers,\n    contentLength,\n    retryCount\n  }) {\n    const reqHeaders = {};\n    if (contentLength) {\n      reqHeaders['content-length'] = contentLength;\n    }\n    const defaultHeaders = this.defaultHeaders(options);\n    applyHeadersMut(reqHeaders, defaultHeaders);\n    applyHeadersMut(reqHeaders, headers);\n    // let builtin fetch set the Content-Type for multipart bodies\n    if (isMultipartBody(options.body) && shimsKind !== 'node') {\n      delete reqHeaders['content-type'];\n    }\n    // Don't set theses headers if they were already set or removed through default headers or by the caller.\n    // We check `defaultHeaders` and `headers`, which can contain nulls, instead of `reqHeaders` to account\n    // for the removal case.\n    if (getHeader(defaultHeaders, 'x-stainless-retry-count') === undefined && getHeader(headers, 'x-stainless-retry-count') === undefined) {\n      reqHeaders['x-stainless-retry-count'] = String(retryCount);\n    }\n    if (getHeader(defaultHeaders, 'x-stainless-timeout') === undefined && getHeader(headers, 'x-stainless-timeout') === undefined && options.timeout) {\n      reqHeaders['x-stainless-timeout'] = String(Math.trunc(options.timeout / 1000));\n    }\n    this.validateHeaders(reqHeaders, headers);\n    return reqHeaders;\n  }\n  /**\r\n   * Used as a callback for mutating the given `FinalRequestOptions` object.\r\n   */\n  async prepareOptions(options) {}\n  /**\r\n   * Used as a callback for mutating the given `RequestInit` object.\r\n   *\r\n   * This is useful for cases where you want to add certain headers based off of\r\n   * the request properties, e.g. `method` or `url`.\r\n   */\n  async prepareRequest(request, {\n    url,\n    options\n  }) {}\n  parseHeaders(headers) {\n    return !headers ? {} : Symbol.iterator in headers ? Object.fromEntries(Array.from(headers).map(header => [...header])) : {\n      ...headers\n    };\n  }\n  makeStatusError(status, error, message, headers) {\n    return APIError.generate(status, error, message, headers);\n  }\n  request(options, remainingRetries = null) {\n    return new APIPromise(this.makeRequest(options, remainingRetries));\n  }\n  async makeRequest(optionsInput, retriesRemaining) {\n    const options = await optionsInput;\n    const maxRetries = options.maxRetries ?? this.maxRetries;\n    if (retriesRemaining == null) {\n      retriesRemaining = maxRetries;\n    }\n    await this.prepareOptions(options);\n    const {\n      req,\n      url,\n      timeout\n    } = this.buildRequest(options, {\n      retryCount: maxRetries - retriesRemaining\n    });\n    await this.prepareRequest(req, {\n      url,\n      options\n    });\n    debug('request', url, options, req.headers);\n    if (options.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n    const controller = new AbortController();\n    const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n    if (response instanceof Error) {\n      if (options.signal?.aborted) {\n        throw new APIUserAbortError();\n      }\n      if (retriesRemaining) {\n        return this.retryRequest(options, retriesRemaining);\n      }\n      if (response.name === 'AbortError') {\n        throw new APIConnectionTimeoutError();\n      }\n      throw new APIConnectionError({\n        cause: response\n      });\n    }\n    const responseHeaders = createResponseHeaders(response.headers);\n    if (!response.ok) {\n      if (retriesRemaining && this.shouldRetry(response)) {\n        const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n        debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders);\n        return this.retryRequest(options, retriesRemaining, responseHeaders);\n      }\n      const errText = await response.text().catch(e => castToError(e).message);\n      const errJSON = safeJSON(errText);\n      const errMessage = errJSON ? undefined : errText;\n      const retryMessage = retriesRemaining ? `(error; no more retries left)` : `(error; not retryable)`;\n      debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders, errMessage);\n      const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n      throw err;\n    }\n    return {\n      response,\n      options,\n      controller\n    };\n  }\n  requestAPIList(Page, options) {\n    const request = this.makeRequest(options, null);\n    return new PagePromise(this, request, Page);\n  }\n  buildURL(path, query) {\n    const url = isAbsoluteURL(path) ? new URL(path) : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n    const defaultQuery = this.defaultQuery();\n    if (!isEmptyObj(defaultQuery)) {\n      query = {\n        ...defaultQuery,\n        ...query\n      };\n    }\n    if (typeof query === 'object' && query && !Array.isArray(query)) {\n      url.search = this.stringifyQuery(query);\n    }\n    return url.toString();\n  }\n  stringifyQuery(query) {\n    return Object.entries(query).filter(([_, value]) => typeof value !== 'undefined').map(([key, value]) => {\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n      }\n      if (value === null) {\n        return `${encodeURIComponent(key)}=`;\n      }\n      throw new GroqError(`Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`);\n    }).join('&');\n  }\n  async fetchWithTimeout(url, init, ms, controller) {\n    const {\n      signal,\n      ...options\n    } = init || {};\n    if (signal) signal.addEventListener('abort', () => controller.abort());\n    const timeout = setTimeout(() => controller.abort(), ms);\n    const fetchOptions = {\n      signal: controller.signal,\n      ...options\n    };\n    if (fetchOptions.method) {\n      // Custom methods like 'patch' need to be uppercased\n      // See https://github.com/nodejs/undici/issues/2294\n      fetchOptions.method = fetchOptions.method.toUpperCase();\n    }\n    return (\n      // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n      this.fetch.call(undefined, url, fetchOptions).finally(() => {\n        clearTimeout(timeout);\n      })\n    );\n  }\n  shouldRetry(response) {\n    // Note this is not a standard header.\n    const shouldRetryHeader = response.headers.get('x-should-retry');\n    // If the server explicitly says whether or not to retry, obey.\n    if (shouldRetryHeader === 'true') return true;\n    if (shouldRetryHeader === 'false') return false;\n    // Retry on request timeouts.\n    if (response.status === 408) return true;\n    // Retry on lock timeouts.\n    if (response.status === 409) return true;\n    // Retry on rate limits.\n    if (response.status === 429) return true;\n    // Retry internal errors.\n    if (response.status >= 500) return true;\n    return false;\n  }\n  async retryRequest(options, retriesRemaining, responseHeaders) {\n    let timeoutMillis;\n    // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n    const retryAfterMillisHeader = responseHeaders?.['retry-after-ms'];\n    if (retryAfterMillisHeader) {\n      const timeoutMs = parseFloat(retryAfterMillisHeader);\n      if (!Number.isNaN(timeoutMs)) {\n        timeoutMillis = timeoutMs;\n      }\n    }\n    // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n    const retryAfterHeader = responseHeaders?.['retry-after'];\n    if (retryAfterHeader && !timeoutMillis) {\n      const timeoutSeconds = parseFloat(retryAfterHeader);\n      if (!Number.isNaN(timeoutSeconds)) {\n        timeoutMillis = timeoutSeconds * 1000;\n      } else {\n        timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n      }\n    }\n    // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n    // just do what it says, but otherwise calculate a default\n    if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n      const maxRetries = options.maxRetries ?? this.maxRetries;\n      timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n    }\n    await sleep(timeoutMillis);\n    return this.makeRequest(options, retriesRemaining - 1);\n  }\n  calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n    const initialRetryDelay = 0.5;\n    const maxRetryDelay = 8.0;\n    const numRetries = maxRetries - retriesRemaining;\n    // Apply exponential backoff, but not more than the max.\n    const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n    // Apply some jitter, take up to at most 25 percent of the retry time.\n    const jitter = 1 - Math.random() * 0.25;\n    return sleepSeconds * jitter * 1000;\n  }\n  getUserAgent() {\n    return `${this.constructor.name}/JS ${VERSION}`;\n  }\n}\nexport class AbstractPage {\n  constructor(client, response, body, options) {\n    _AbstractPage_client.set(this, void 0);\n    __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n    this.options = options;\n    this.response = response;\n    this.body = body;\n  }\n  hasNextPage() {\n    const items = this.getPaginatedItems();\n    if (!items.length) return false;\n    return this.nextPageInfo() != null;\n  }\n  async getNextPage() {\n    const nextInfo = this.nextPageInfo();\n    if (!nextInfo) {\n      throw new GroqError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n    }\n    const nextOptions = {\n      ...this.options\n    };\n    if ('params' in nextInfo && typeof nextOptions.query === 'object') {\n      nextOptions.query = {\n        ...nextOptions.query,\n        ...nextInfo.params\n      };\n    } else if ('url' in nextInfo) {\n      const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n      for (const [key, value] of params) {\n        nextInfo.url.searchParams.set(key, value);\n      }\n      nextOptions.query = undefined;\n      nextOptions.path = nextInfo.url.toString();\n    }\n    return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n  }\n  async *iterPages() {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let page = this;\n    yield page;\n    while (page.hasNextPage()) {\n      page = await page.getNextPage();\n      yield page;\n    }\n  }\n  async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n    for await (const page of this.iterPages()) {\n      for (const item of page.getPaginatedItems()) {\n        yield item;\n      }\n    }\n  }\n}\n/**\r\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\r\n *\r\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\r\n *\r\n *    for await (const item of client.items.list()) {\r\n *      console.log(item)\r\n *    }\r\n */\nexport class PagePromise extends APIPromise {\n  constructor(client, request, Page) {\n    super(request, async props => new Page(client, props.response, await defaultParseResponse(props), props.options));\n  }\n  /**\r\n   * Allow auto-paginating iteration on an unawaited list call, eg:\r\n   *\r\n   *    for await (const item of client.items.list()) {\r\n   *      console.log(item)\r\n   *    }\r\n   */\n  async *[Symbol.asyncIterator]() {\n    const page = await this;\n    for await (const item of page) {\n      yield item;\n    }\n  }\n}\nexport const createResponseHeaders = headers => {\n  return new Proxy(Object.fromEntries(\n  // @ts-ignore\n  headers.entries()), {\n    get(target, name) {\n      const key = name.toString();\n      return target[key.toLowerCase()] || target[key];\n    }\n  });\n};\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys = {\n  method: true,\n  path: true,\n  query: true,\n  body: true,\n  headers: true,\n  maxRetries: true,\n  stream: true,\n  timeout: true,\n  httpAgent: true,\n  signal: true,\n  idempotencyKey: true,\n  __binaryRequest: true,\n  __binaryResponse: true,\n  __streamClass: true\n};\nexport const isRequestOptions = obj => {\n  return typeof obj === 'object' && obj !== null && !isEmptyObj(obj) && Object.keys(obj).every(k => hasOwn(requestOptionsKeys, k));\n};\nconst getPlatformProperties = () => {\n  if (typeof Deno !== 'undefined' && Deno.build != null) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(Deno.build.os),\n      'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n      'X-Stainless-Runtime': 'deno',\n      'X-Stainless-Runtime-Version': typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown'\n    };\n  }\n  if (typeof EdgeRuntime !== 'undefined') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': `other:${EdgeRuntime}`,\n      'X-Stainless-Runtime': 'edge',\n      'X-Stainless-Runtime-Version': process.version\n    };\n  }\n  // Check if Node.js\n  if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(process.platform),\n      'X-Stainless-Arch': normalizeArch(process.arch),\n      'X-Stainless-Runtime': 'node',\n      'X-Stainless-Runtime-Version': process.version\n    };\n  }\n  const browserInfo = getBrowserInfo();\n  if (browserInfo) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': 'unknown',\n      'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n      'X-Stainless-Runtime-Version': browserInfo.version\n    };\n  }\n  // TODO add support for Cloudflare workers, etc.\n  return {\n    'X-Stainless-Lang': 'js',\n    'X-Stainless-Package-Version': VERSION,\n    'X-Stainless-OS': 'Unknown',\n    'X-Stainless-Arch': 'unknown',\n    'X-Stainless-Runtime': 'unknown',\n    'X-Stainless-Runtime-Version': 'unknown'\n  };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n  if (typeof navigator === 'undefined' || !navigator) {\n    return null;\n  }\n  // NOTE: The order matters here!\n  const browserPatterns = [{\n    key: 'edge',\n    pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'ie',\n    pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'ie',\n    pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'chrome',\n    pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'firefox',\n    pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'safari',\n    pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/\n  }];\n  // Find the FIRST matching browser\n  for (const {\n    key,\n    pattern\n  } of browserPatterns) {\n    const match = pattern.exec(navigator.userAgent);\n    if (match) {\n      const major = match[1] || 0;\n      const minor = match[2] || 0;\n      const patch = match[3] || 0;\n      return {\n        browser: key,\n        version: `${major}.${minor}.${patch}`\n      };\n    }\n  }\n  return null;\n}\nconst normalizeArch = arch => {\n  // Node docs:\n  // - https://nodejs.org/api/process.html#processarch\n  // Deno docs:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  if (arch === 'x32') return 'x32';\n  if (arch === 'x86_64' || arch === 'x64') return 'x64';\n  if (arch === 'arm') return 'arm';\n  if (arch === 'aarch64' || arch === 'arm64') return 'arm64';\n  if (arch) return `other:${arch}`;\n  return 'unknown';\n};\nconst normalizePlatform = platform => {\n  // Node platforms:\n  // - https://nodejs.org/api/process.html#processplatform\n  // Deno platforms:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  // - https://github.com/denoland/deno/issues/14799\n  platform = platform.toLowerCase();\n  // NOTE: this iOS check is untested and may not work\n  // Node does not work natively on IOS, there is a fork at\n  // https://github.com/nodejs-mobile/nodejs-mobile\n  // however it is unknown at the time of writing how to detect if it is running\n  if (platform.includes('ios')) return 'iOS';\n  if (platform === 'android') return 'Android';\n  if (platform === 'darwin') return 'MacOS';\n  if (platform === 'win32') return 'Windows';\n  if (platform === 'freebsd') return 'FreeBSD';\n  if (platform === 'openbsd') return 'OpenBSD';\n  if (platform === 'linux') return 'Linux';\n  if (platform) return `Other:${platform}`;\n  return 'Unknown';\n};\nlet _platformHeaders;\nconst getPlatformHeaders = () => {\n  return _platformHeaders ?? (_platformHeaders = getPlatformProperties());\n};\nexport const safeJSON = text => {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n};\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nconst isAbsoluteURL = url => {\n  return startsWithSchemeRegexp.test(url);\n};\nexport const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\nconst validatePositiveInteger = (name, n) => {\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\n    throw new GroqError(`${name} must be an integer`);\n  }\n  if (n < 0) {\n    throw new GroqError(`${name} must be a positive integer`);\n  }\n  return n;\n};\nexport const castToError = err => {\n  if (err instanceof Error) return err;\n  if (typeof err === 'object' && err !== null) {\n    try {\n      return new Error(JSON.stringify(err));\n    } catch {}\n  }\n  return new Error(err);\n};\nexport const ensurePresent = value => {\n  if (value == null) throw new GroqError(`Expected a value to be given but received ${value} instead.`);\n  return value;\n};\n/**\r\n * Read an environment variable.\r\n *\r\n * Trims beginning and trailing whitespace.\r\n *\r\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\r\n */\nexport const readEnv = env => {\n  if (typeof process !== 'undefined') {\n    return process.env?.[env]?.trim() ?? undefined;\n  }\n  if (typeof Deno !== 'undefined') {\n    return Deno.env?.get?.(env)?.trim();\n  }\n  return undefined;\n};\nexport const coerceInteger = value => {\n  if (typeof value === 'number') return Math.round(value);\n  if (typeof value === 'string') return parseInt(value, 10);\n  throw new GroqError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = value => {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') return parseFloat(value);\n  throw new GroqError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = value => {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') return value === 'true';\n  return Boolean(value);\n};\nexport const maybeCoerceInteger = value => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceInteger(value);\n};\nexport const maybeCoerceFloat = value => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = value => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceBoolean(value);\n};\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n  if (!obj) return true;\n  for (const _k in obj) return false;\n  return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n/**\r\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\r\n * using lower-case for all properties,\r\n * ignoring any keys with undefined values,\r\n * and deleting any keys with null values.\r\n */\nfunction applyHeadersMut(targetHeaders, newHeaders) {\n  for (const k in newHeaders) {\n    if (!hasOwn(newHeaders, k)) continue;\n    const lowerKey = k.toLowerCase();\n    if (!lowerKey) continue;\n    const val = newHeaders[k];\n    if (val === null) {\n      delete targetHeaders[lowerKey];\n    } else if (val !== undefined) {\n      targetHeaders[lowerKey] = val;\n    }\n  }\n}\nexport function debug(action, ...args) {\n  if (typeof process !== 'undefined' && process?.env?.['DEBUG'] === 'true') {\n    console.log(`Groq:DEBUG:${action}`, ...args);\n  }\n}\n/**\r\n * https://stackoverflow.com/a/2117523\r\n */\nconst uuid4 = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\nexport const isRunningInBrowser = () => {\n  return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n    // @ts-ignore\n    typeof window.document !== 'undefined' &&\n    // @ts-ignore\n    typeof navigator !== 'undefined'\n  );\n};\nexport const isHeadersProtocol = headers => {\n  return typeof headers?.get === 'function';\n};\nexport const getRequiredHeader = (headers, header) => {\n  const foundHeader = getHeader(headers, header);\n  if (foundHeader === undefined) {\n    throw new Error(`Could not find ${header} header`);\n  }\n  return foundHeader;\n};\nexport const getHeader = (headers, header) => {\n  const lowerCasedHeader = header.toLowerCase();\n  if (isHeadersProtocol(headers)) {\n    // to deal with the case where the header looks like Stainless-Event-Id\n    const intercapsHeader = header[0]?.toUpperCase() + header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n    for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n      const value = headers.get(key);\n      if (value) {\n        return value;\n      }\n    }\n  }\n  for (const [key, value] of Object.entries(headers)) {\n    if (key.toLowerCase() === lowerCasedHeader) {\n      if (Array.isArray(value)) {\n        if (value.length <= 1) return value[0];\n        console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n        return value[0];\n      }\n      return value;\n    }\n  }\n  return undefined;\n};\n/**\r\n * Encodes a string to Base64 format.\r\n */\nexport const toBase64 = str => {\n  if (!str) return '';\n  if (typeof Buffer !== 'undefined') {\n    return Buffer.from(str).toString('base64');\n  }\n  if (typeof btoa !== 'undefined') {\n    return btoa(str);\n  }\n  throw new GroqError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\nexport function isObj(obj) {\n  return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}","map":{"version":3,"names":["VERSION","Stream","GroqError","APIError","APIConnectionError","APIConnectionTimeoutError","APIUserAbortError","kind","shimsKind","getDefaultAgent","fetch","init","isBlobLike","isMultipartBody","maybeMultipartFormRequestOptions","multipartFormRequestOptions","createForm","defaultParseResponse","props","response","options","stream","debug","status","url","headers","body","__streamClass","fromSSEResponse","controller","__binaryResponse","contentType","get","mediaType","split","trim","isJSON","includes","endsWith","json","text","APIPromise","Promise","constructor","responsePromise","parseResponse","resolve","_thenUnwrap","transform","asResponse","then","p","withResponse","data","all","parse","parsedPromise","onfulfilled","onrejected","catch","finally","onfinally","APIClient","baseURL","maxRetries","timeout","httpAgent","overriddenFetch","validatePositiveInteger","authHeaders","opts","defaultHeaders","Accept","getUserAgent","getPlatformHeaders","validateHeaders","customHeaders","defaultIdempotencyKey","uuid4","path","methodRequest","post","patch","put","delete","method","request","DataView","arrayBuffer","ArrayBuffer","isView","buffer","getAPIList","Page","requestAPIList","calculateContentLength","Buffer","byteLength","toString","TextEncoder","encoder","encoded","encode","length","buildRequest","inputOptions","retryCount","query","__binaryRequest","JSON","stringify","contentLength","buildURL","minAgentTimeout","idempotencyHeader","idempotencyKey","reqHeaders","buildHeaders","req","agent","signal","applyHeadersMut","getHeader","undefined","String","Math","trunc","prepareOptions","prepareRequest","parseHeaders","Symbol","iterator","Object","fromEntries","Array","from","map","header","makeStatusError","error","message","generate","remainingRetries","makeRequest","optionsInput","retriesRemaining","aborted","AbortController","fetchWithTimeout","castToError","Error","retryRequest","name","cause","responseHeaders","createResponseHeaders","ok","shouldRetry","retryMessage","errText","e","errJSON","safeJSON","errMessage","err","PagePromise","isAbsoluteURL","URL","startsWith","slice","defaultQuery","isEmptyObj","isArray","search","stringifyQuery","entries","filter","_","value","key","encodeURIComponent","join","ms","addEventListener","abort","setTimeout","fetchOptions","toUpperCase","call","clearTimeout","shouldRetryHeader","timeoutMillis","retryAfterMillisHeader","timeoutMs","parseFloat","Number","isNaN","retryAfterHeader","timeoutSeconds","Date","now","calculateDefaultRetryTimeoutMillis","sleep","initialRetryDelay","maxRetryDelay","numRetries","sleepSeconds","min","pow","jitter","random","AbstractPage","client","_AbstractPage_client","set","__classPrivateFieldSet","hasNextPage","items","getPaginatedItems","nextPageInfo","getNextPage","nextInfo","nextOptions","params","searchParams","__classPrivateFieldGet","iterPages","page","WeakMap","asyncIterator","item","Proxy","target","toLowerCase","requestOptionsKeys","isRequestOptions","obj","keys","every","k","hasOwn","getPlatformProperties","Deno","build","normalizePlatform","os","normalizeArch","arch","version","deno","EdgeRuntime","process","prototype","platform","browserInfo","getBrowserInfo","browser","navigator","browserPatterns","pattern","match","exec","userAgent","major","minor","_platformHeaders","startsWithSchemeRegexp","test","n","isInteger","ensurePresent","readEnv","env","coerceInteger","round","parseInt","coerceFloat","coerceBoolean","Boolean","maybeCoerceInteger","maybeCoerceFloat","maybeCoerceBoolean","_k","hasOwnProperty","targetHeaders","newHeaders","lowerKey","val","action","args","console","log","replace","c","r","v","isRunningInBrowser","window","document","isHeadersProtocol","getRequiredHeader","foundHeader","lowerCasedHeader","intercapsHeader","substring","_m","g1","g2","warn","toBase64","str","btoa","isObj"],"sources":["D:\\consultancy_project\\consultancy_project\\client\\node_modules\\groq-sdk\\src\\core.ts"],"sourcesContent":["import { VERSION } from './version';\r\nimport { Stream } from './lib/streaming';\r\nimport {\r\n  GroqError,\r\n  APIError,\r\n  APIConnectionError,\r\n  APIConnectionTimeoutError,\r\n  APIUserAbortError,\r\n} from './error';\r\nimport {\r\n  kind as shimsKind,\r\n  type Readable,\r\n  getDefaultAgent,\r\n  type Agent,\r\n  fetch,\r\n  type RequestInfo,\r\n  type RequestInit,\r\n  type Response,\r\n  type HeadersInit,\r\n  init,\r\n} from './_shims/index';\r\n\r\n// try running side effects outside of _shims/index to workaround https://github.com/vercel/next.js/issues/76881\r\ninit();\r\n\r\nexport { type Response };\r\nimport { BlobLike, isBlobLike, isMultipartBody } from './uploads';\r\nexport {\r\n  maybeMultipartFormRequestOptions,\r\n  multipartFormRequestOptions,\r\n  createForm,\r\n  type Uploadable,\r\n} from './uploads';\r\n\r\nexport type Fetch = (url: RequestInfo, init?: RequestInit) => Promise<Response>;\r\n\r\n/**\r\n * An alias to the builtin `Array` type so we can\r\n * easily alias it in import statements if there are name clashes.\r\n */\r\ntype _Array<T> = Array<T>;\r\n\r\n/**\r\n * An alias to the builtin `Record` type so we can\r\n * easily alias it in import statements if there are name clashes.\r\n */\r\ntype _Record<K extends keyof any, T> = Record<K, T>;\r\n\r\nexport type { _Array as Array, _Record as Record };\r\n\r\ntype PromiseOrValue<T> = T | Promise<T>;\r\n\r\ntype APIResponseProps = {\r\n  response: Response;\r\n  options: FinalRequestOptions;\r\n  controller: AbortController;\r\n};\r\n\r\nasync function defaultParseResponse<T>(props: APIResponseProps): Promise<T> {\r\n  const { response } = props;\r\n  if (props.options.stream) {\r\n    debug('response', response.status, response.url, response.headers, response.body);\r\n\r\n    // Note: there is an invariant here that isn't represented in the type system\r\n    // that if you set `stream: true` the response type must also be `Stream<T>`\r\n\r\n    if (props.options.__streamClass) {\r\n      return props.options.__streamClass.fromSSEResponse(response, props.controller) as any;\r\n    }\r\n\r\n    return Stream.fromSSEResponse(response, props.controller) as any;\r\n  }\r\n\r\n  // fetch refuses to read the body when the status code is 204.\r\n  if (response.status === 204) {\r\n    return null as T;\r\n  }\r\n\r\n  if (props.options.__binaryResponse) {\r\n    return response as unknown as T;\r\n  }\r\n\r\n  const contentType = response.headers.get('content-type');\r\n  const mediaType = contentType?.split(';')[0]?.trim();\r\n  const isJSON = mediaType?.includes('application/json') || mediaType?.endsWith('+json');\r\n  if (isJSON) {\r\n    const json = await response.json();\r\n\r\n    debug('response', response.status, response.url, response.headers, json);\r\n\r\n    return json as T;\r\n  }\r\n\r\n  const text = await response.text();\r\n  debug('response', response.status, response.url, response.headers, text);\r\n\r\n  // TODO handle blob, arraybuffer, other content types, etc.\r\n  return text as unknown as T;\r\n}\r\n\r\n/**\r\n * A subclass of `Promise` providing additional helper methods\r\n * for interacting with the SDK.\r\n */\r\nexport class APIPromise<T> extends Promise<T> {\r\n  private parsedPromise: Promise<T> | undefined;\r\n\r\n  constructor(\r\n    private responsePromise: Promise<APIResponseProps>,\r\n    private parseResponse: (props: APIResponseProps) => PromiseOrValue<T> = defaultParseResponse,\r\n  ) {\r\n    super((resolve) => {\r\n      // this is maybe a bit weird but this has to be a no-op to not implicitly\r\n      // parse the response body; instead .then, .catch, .finally are overridden\r\n      // to parse the response\r\n      resolve(null as any);\r\n    });\r\n  }\r\n\r\n  _thenUnwrap<U>(transform: (data: T, props: APIResponseProps) => U): APIPromise<U> {\r\n    return new APIPromise(this.responsePromise, async (props) =>\r\n      transform(await this.parseResponse(props), props),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Gets the raw `Response` instance instead of parsing the response\r\n   * data.\r\n   *\r\n   * If you want to parse the response body but still get the `Response`\r\n   * instance, you can use {@link withResponse()}.\r\n   *\r\n   * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\r\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\r\n   * or add one of these imports before your first `import â€¦ from 'groq-sdk'`:\r\n   * - `import 'groq-sdk/shims/node'` (if you're running on Node)\r\n   * - `import 'groq-sdk/shims/web'` (otherwise)\r\n   */\r\n  asResponse(): Promise<Response> {\r\n    return this.responsePromise.then((p) => p.response);\r\n  }\r\n  /**\r\n   * Gets the parsed response data and the raw `Response` instance.\r\n   *\r\n   * If you just want to get the raw `Response` instance without parsing it,\r\n   * you can use {@link asResponse()}.\r\n   *\r\n   *\r\n   * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\r\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\r\n   * or add one of these imports before your first `import â€¦ from 'groq-sdk'`:\r\n   * - `import 'groq-sdk/shims/node'` (if you're running on Node)\r\n   * - `import 'groq-sdk/shims/web'` (otherwise)\r\n   */\r\n  async withResponse(): Promise<{ data: T; response: Response }> {\r\n    const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\r\n    return { data, response };\r\n  }\r\n\r\n  private parse(): Promise<T> {\r\n    if (!this.parsedPromise) {\r\n      this.parsedPromise = this.responsePromise.then(this.parseResponse);\r\n    }\r\n    return this.parsedPromise;\r\n  }\r\n\r\n  override then<TResult1 = T, TResult2 = never>(\r\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\r\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,\r\n  ): Promise<TResult1 | TResult2> {\r\n    return this.parse().then(onfulfilled, onrejected);\r\n  }\r\n\r\n  override catch<TResult = never>(\r\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,\r\n  ): Promise<T | TResult> {\r\n    return this.parse().catch(onrejected);\r\n  }\r\n\r\n  override finally(onfinally?: (() => void) | undefined | null): Promise<T> {\r\n    return this.parse().finally(onfinally);\r\n  }\r\n}\r\n\r\nexport abstract class APIClient {\r\n  baseURL: string;\r\n  maxRetries: number;\r\n  timeout: number;\r\n  httpAgent: Agent | undefined;\r\n\r\n  private fetch: Fetch;\r\n  protected idempotencyHeader?: string;\r\n\r\n  constructor({\r\n    baseURL,\r\n    maxRetries = 2,\r\n    timeout = 60000, // 1 minute\r\n    httpAgent,\r\n    fetch: overriddenFetch,\r\n  }: {\r\n    baseURL: string;\r\n    maxRetries?: number | undefined;\r\n    timeout: number | undefined;\r\n    httpAgent: Agent | undefined;\r\n    fetch: Fetch | undefined;\r\n  }) {\r\n    this.baseURL = baseURL;\r\n    this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\r\n    this.timeout = validatePositiveInteger('timeout', timeout);\r\n    this.httpAgent = httpAgent;\r\n\r\n    this.fetch = overriddenFetch ?? fetch;\r\n  }\r\n\r\n  protected authHeaders(opts: FinalRequestOptions): Headers {\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * Override this to add your own default headers, for example:\r\n   *\r\n   *  {\r\n   *    ...super.defaultHeaders(),\r\n   *    Authorization: 'Bearer 123',\r\n   *  }\r\n   */\r\n  protected defaultHeaders(opts: FinalRequestOptions): Headers {\r\n    return {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'User-Agent': this.getUserAgent(),\r\n      ...getPlatformHeaders(),\r\n      ...this.authHeaders(opts),\r\n    };\r\n  }\r\n\r\n  protected abstract defaultQuery(): DefaultQuery | undefined;\r\n\r\n  /**\r\n   * Override this to add your own headers validation:\r\n   */\r\n  protected validateHeaders(headers: Headers, customHeaders: Headers) {}\r\n\r\n  protected defaultIdempotencyKey(): string {\r\n    return `stainless-node-retry-${uuid4()}`;\r\n  }\r\n\r\n  get<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\r\n    return this.methodRequest('get', path, opts);\r\n  }\r\n\r\n  post<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\r\n    return this.methodRequest('post', path, opts);\r\n  }\r\n\r\n  patch<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\r\n    return this.methodRequest('patch', path, opts);\r\n  }\r\n\r\n  put<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\r\n    return this.methodRequest('put', path, opts);\r\n  }\r\n\r\n  delete<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\r\n    return this.methodRequest('delete', path, opts);\r\n  }\r\n\r\n  private methodRequest<Req, Rsp>(\r\n    method: HTTPMethod,\r\n    path: string,\r\n    opts?: PromiseOrValue<RequestOptions<Req>>,\r\n  ): APIPromise<Rsp> {\r\n    return this.request(\r\n      Promise.resolve(opts).then(async (opts) => {\r\n        const body =\r\n          opts && isBlobLike(opts?.body) ? new DataView(await opts.body.arrayBuffer())\r\n          : opts?.body instanceof DataView ? opts.body\r\n          : opts?.body instanceof ArrayBuffer ? new DataView(opts.body)\r\n          : opts && ArrayBuffer.isView(opts?.body) ? new DataView(opts.body.buffer)\r\n          : opts?.body;\r\n        return { method, path, ...opts, body };\r\n      }),\r\n    );\r\n  }\r\n\r\n  getAPIList<Item, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\r\n    path: string,\r\n    Page: new (...args: any[]) => PageClass,\r\n    opts?: RequestOptions<any>,\r\n  ): PagePromise<PageClass, Item> {\r\n    return this.requestAPIList(Page, { method: 'get', path, ...opts });\r\n  }\r\n\r\n  private calculateContentLength(body: unknown): string | null {\r\n    if (typeof body === 'string') {\r\n      if (typeof Buffer !== 'undefined') {\r\n        return Buffer.byteLength(body, 'utf8').toString();\r\n      }\r\n\r\n      if (typeof TextEncoder !== 'undefined') {\r\n        const encoder = new TextEncoder();\r\n        const encoded = encoder.encode(body);\r\n        return encoded.length.toString();\r\n      }\r\n    } else if (ArrayBuffer.isView(body)) {\r\n      return body.byteLength.toString();\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  buildRequest<Req>(\r\n    inputOptions: FinalRequestOptions<Req>,\r\n    { retryCount = 0 }: { retryCount?: number } = {},\r\n  ): { req: RequestInit; url: string; timeout: number } {\r\n    const options = { ...inputOptions };\r\n    const { method, path, query, headers: headers = {} } = options;\r\n\r\n    const body =\r\n      ArrayBuffer.isView(options.body) || (options.__binaryRequest && typeof options.body === 'string') ?\r\n        options.body\r\n      : isMultipartBody(options.body) ? options.body.body\r\n      : options.body ? JSON.stringify(options.body, null, 2)\r\n      : null;\r\n    const contentLength = this.calculateContentLength(body);\r\n\r\n    const url = this.buildURL(path!, query);\r\n    if ('timeout' in options) validatePositiveInteger('timeout', options.timeout);\r\n    options.timeout = options.timeout ?? this.timeout;\r\n    const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\r\n    const minAgentTimeout = options.timeout + 1000;\r\n    if (\r\n      typeof (httpAgent as any)?.options?.timeout === 'number' &&\r\n      minAgentTimeout > ((httpAgent as any).options.timeout ?? 0)\r\n    ) {\r\n      // Allow any given request to bump our agent active socket timeout.\r\n      // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\r\n      // and without mutating agent we would need to create more of them.\r\n      // This tradeoff optimizes for performance.\r\n      (httpAgent as any).options.timeout = minAgentTimeout;\r\n    }\r\n\r\n    if (this.idempotencyHeader && method !== 'get') {\r\n      if (!inputOptions.idempotencyKey) inputOptions.idempotencyKey = this.defaultIdempotencyKey();\r\n      headers[this.idempotencyHeader] = inputOptions.idempotencyKey;\r\n    }\r\n\r\n    const reqHeaders = this.buildHeaders({ options, headers, contentLength, retryCount });\r\n\r\n    const req: RequestInit = {\r\n      method,\r\n      ...(body && { body: body as any }),\r\n      headers: reqHeaders,\r\n      ...(httpAgent && { agent: httpAgent }),\r\n      // @ts-ignore node-fetch uses a custom AbortSignal type that is\r\n      // not compatible with standard web types\r\n      signal: options.signal ?? null,\r\n    };\r\n\r\n    return { req, url, timeout: options.timeout };\r\n  }\r\n\r\n  private buildHeaders({\r\n    options,\r\n    headers,\r\n    contentLength,\r\n    retryCount,\r\n  }: {\r\n    options: FinalRequestOptions;\r\n    headers: Record<string, string | null | undefined>;\r\n    contentLength: string | null | undefined;\r\n    retryCount: number;\r\n  }): Record<string, string> {\r\n    const reqHeaders: Record<string, string> = {};\r\n    if (contentLength) {\r\n      reqHeaders['content-length'] = contentLength;\r\n    }\r\n\r\n    const defaultHeaders = this.defaultHeaders(options);\r\n    applyHeadersMut(reqHeaders, defaultHeaders);\r\n    applyHeadersMut(reqHeaders, headers);\r\n\r\n    // let builtin fetch set the Content-Type for multipart bodies\r\n    if (isMultipartBody(options.body) && shimsKind !== 'node') {\r\n      delete reqHeaders['content-type'];\r\n    }\r\n\r\n    // Don't set theses headers if they were already set or removed through default headers or by the caller.\r\n    // We check `defaultHeaders` and `headers`, which can contain nulls, instead of `reqHeaders` to account\r\n    // for the removal case.\r\n    if (\r\n      getHeader(defaultHeaders, 'x-stainless-retry-count') === undefined &&\r\n      getHeader(headers, 'x-stainless-retry-count') === undefined\r\n    ) {\r\n      reqHeaders['x-stainless-retry-count'] = String(retryCount);\r\n    }\r\n    if (\r\n      getHeader(defaultHeaders, 'x-stainless-timeout') === undefined &&\r\n      getHeader(headers, 'x-stainless-timeout') === undefined &&\r\n      options.timeout\r\n    ) {\r\n      reqHeaders['x-stainless-timeout'] = String(Math.trunc(options.timeout / 1000));\r\n    }\r\n\r\n    this.validateHeaders(reqHeaders, headers);\r\n\r\n    return reqHeaders;\r\n  }\r\n\r\n  /**\r\n   * Used as a callback for mutating the given `FinalRequestOptions` object.\r\n   */\r\n  protected async prepareOptions(options: FinalRequestOptions): Promise<void> {}\r\n\r\n  /**\r\n   * Used as a callback for mutating the given `RequestInit` object.\r\n   *\r\n   * This is useful for cases where you want to add certain headers based off of\r\n   * the request properties, e.g. `method` or `url`.\r\n   */\r\n  protected async prepareRequest(\r\n    request: RequestInit,\r\n    { url, options }: { url: string; options: FinalRequestOptions },\r\n  ): Promise<void> {}\r\n\r\n  protected parseHeaders(headers: HeadersInit | null | undefined): Record<string, string> {\r\n    return (\r\n      !headers ? {}\r\n      : Symbol.iterator in headers ?\r\n        Object.fromEntries(Array.from(headers as Iterable<string[]>).map((header) => [...header]))\r\n      : { ...(headers as any as Record<string, string>) }\r\n    );\r\n  }\r\n\r\n  protected makeStatusError(\r\n    status: number | undefined,\r\n    error: Object | undefined,\r\n    message: string | undefined,\r\n    headers: Headers | undefined,\r\n  ): APIError {\r\n    return APIError.generate(status, error, message, headers);\r\n  }\r\n\r\n  request<Req, Rsp>(\r\n    options: PromiseOrValue<FinalRequestOptions<Req>>,\r\n    remainingRetries: number | null = null,\r\n  ): APIPromise<Rsp> {\r\n    return new APIPromise(this.makeRequest(options, remainingRetries));\r\n  }\r\n\r\n  private async makeRequest<Req>(\r\n    optionsInput: PromiseOrValue<FinalRequestOptions<Req>>,\r\n    retriesRemaining: number | null,\r\n  ): Promise<APIResponseProps> {\r\n    const options = await optionsInput;\r\n    const maxRetries = options.maxRetries ?? this.maxRetries;\r\n    if (retriesRemaining == null) {\r\n      retriesRemaining = maxRetries;\r\n    }\r\n\r\n    await this.prepareOptions(options);\r\n\r\n    const { req, url, timeout } = this.buildRequest(options, { retryCount: maxRetries - retriesRemaining });\r\n\r\n    await this.prepareRequest(req, { url, options });\r\n\r\n    debug('request', url, options, req.headers);\r\n\r\n    if (options.signal?.aborted) {\r\n      throw new APIUserAbortError();\r\n    }\r\n\r\n    const controller = new AbortController();\r\n    const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\r\n\r\n    if (response instanceof Error) {\r\n      if (options.signal?.aborted) {\r\n        throw new APIUserAbortError();\r\n      }\r\n      if (retriesRemaining) {\r\n        return this.retryRequest(options, retriesRemaining);\r\n      }\r\n      if (response.name === 'AbortError') {\r\n        throw new APIConnectionTimeoutError();\r\n      }\r\n      throw new APIConnectionError({ cause: response });\r\n    }\r\n\r\n    const responseHeaders = createResponseHeaders(response.headers);\r\n\r\n    if (!response.ok) {\r\n      if (retriesRemaining && this.shouldRetry(response)) {\r\n        const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\r\n        debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders);\r\n        return this.retryRequest(options, retriesRemaining, responseHeaders);\r\n      }\r\n\r\n      const errText = await response.text().catch((e) => castToError(e).message);\r\n      const errJSON = safeJSON(errText);\r\n      const errMessage = errJSON ? undefined : errText;\r\n      const retryMessage = retriesRemaining ? `(error; no more retries left)` : `(error; not retryable)`;\r\n\r\n      debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders, errMessage);\r\n\r\n      const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\r\n      throw err;\r\n    }\r\n\r\n    return { response, options, controller };\r\n  }\r\n\r\n  requestAPIList<Item = unknown, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\r\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\r\n    options: FinalRequestOptions,\r\n  ): PagePromise<PageClass, Item> {\r\n    const request = this.makeRequest(options, null);\r\n    return new PagePromise<PageClass, Item>(this, request, Page);\r\n  }\r\n\r\n  buildURL<Req>(path: string, query: Req | null | undefined): string {\r\n    const url =\r\n      isAbsoluteURL(path) ?\r\n        new URL(path)\r\n      : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\r\n\r\n    const defaultQuery = this.defaultQuery();\r\n    if (!isEmptyObj(defaultQuery)) {\r\n      query = { ...defaultQuery, ...query } as Req;\r\n    }\r\n\r\n    if (typeof query === 'object' && query && !Array.isArray(query)) {\r\n      url.search = this.stringifyQuery(query as Record<string, unknown>);\r\n    }\r\n\r\n    return url.toString();\r\n  }\r\n\r\n  protected stringifyQuery(query: Record<string, unknown>): string {\r\n    return Object.entries(query)\r\n      .filter(([_, value]) => typeof value !== 'undefined')\r\n      .map(([key, value]) => {\r\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\r\n          return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\r\n        }\r\n        if (value === null) {\r\n          return `${encodeURIComponent(key)}=`;\r\n        }\r\n        throw new GroqError(\r\n          `Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`,\r\n        );\r\n      })\r\n      .join('&');\r\n  }\r\n\r\n  async fetchWithTimeout(\r\n    url: RequestInfo,\r\n    init: RequestInit | undefined,\r\n    ms: number,\r\n    controller: AbortController,\r\n  ): Promise<Response> {\r\n    const { signal, ...options } = init || {};\r\n    if (signal) signal.addEventListener('abort', () => controller.abort());\r\n\r\n    const timeout = setTimeout(() => controller.abort(), ms);\r\n\r\n    const fetchOptions = {\r\n      signal: controller.signal as any,\r\n      ...options,\r\n    };\r\n    if (fetchOptions.method) {\r\n      // Custom methods like 'patch' need to be uppercased\r\n      // See https://github.com/nodejs/undici/issues/2294\r\n      fetchOptions.method = fetchOptions.method.toUpperCase();\r\n    }\r\n\r\n    return (\r\n      // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\r\n      this.fetch.call(undefined, url, fetchOptions).finally(() => {\r\n        clearTimeout(timeout);\r\n      })\r\n    );\r\n  }\r\n\r\n  private shouldRetry(response: Response): boolean {\r\n    // Note this is not a standard header.\r\n    const shouldRetryHeader = response.headers.get('x-should-retry');\r\n\r\n    // If the server explicitly says whether or not to retry, obey.\r\n    if (shouldRetryHeader === 'true') return true;\r\n    if (shouldRetryHeader === 'false') return false;\r\n\r\n    // Retry on request timeouts.\r\n    if (response.status === 408) return true;\r\n\r\n    // Retry on lock timeouts.\r\n    if (response.status === 409) return true;\r\n\r\n    // Retry on rate limits.\r\n    if (response.status === 429) return true;\r\n\r\n    // Retry internal errors.\r\n    if (response.status >= 500) return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  private async retryRequest(\r\n    options: FinalRequestOptions,\r\n    retriesRemaining: number,\r\n    responseHeaders?: Headers | undefined,\r\n  ): Promise<APIResponseProps> {\r\n    let timeoutMillis: number | undefined;\r\n\r\n    // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\r\n    const retryAfterMillisHeader = responseHeaders?.['retry-after-ms'];\r\n    if (retryAfterMillisHeader) {\r\n      const timeoutMs = parseFloat(retryAfterMillisHeader);\r\n      if (!Number.isNaN(timeoutMs)) {\r\n        timeoutMillis = timeoutMs;\r\n      }\r\n    }\r\n\r\n    // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\r\n    const retryAfterHeader = responseHeaders?.['retry-after'];\r\n    if (retryAfterHeader && !timeoutMillis) {\r\n      const timeoutSeconds = parseFloat(retryAfterHeader);\r\n      if (!Number.isNaN(timeoutSeconds)) {\r\n        timeoutMillis = timeoutSeconds * 1000;\r\n      } else {\r\n        timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\r\n      }\r\n    }\r\n\r\n    // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\r\n    // just do what it says, but otherwise calculate a default\r\n    if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\r\n      const maxRetries = options.maxRetries ?? this.maxRetries;\r\n      timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\r\n    }\r\n    await sleep(timeoutMillis);\r\n\r\n    return this.makeRequest(options, retriesRemaining - 1);\r\n  }\r\n\r\n  private calculateDefaultRetryTimeoutMillis(retriesRemaining: number, maxRetries: number): number {\r\n    const initialRetryDelay = 0.5;\r\n    const maxRetryDelay = 8.0;\r\n\r\n    const numRetries = maxRetries - retriesRemaining;\r\n\r\n    // Apply exponential backoff, but not more than the max.\r\n    const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\r\n\r\n    // Apply some jitter, take up to at most 25 percent of the retry time.\r\n    const jitter = 1 - Math.random() * 0.25;\r\n\r\n    return sleepSeconds * jitter * 1000;\r\n  }\r\n\r\n  private getUserAgent(): string {\r\n    return `${this.constructor.name}/JS ${VERSION}`;\r\n  }\r\n}\r\n\r\nexport type PageInfo = { url: URL } | { params: Record<string, unknown> | null };\r\n\r\nexport abstract class AbstractPage<Item> implements AsyncIterable<Item> {\r\n  #client: APIClient;\r\n  protected options: FinalRequestOptions;\r\n\r\n  protected response: Response;\r\n  protected body: unknown;\r\n\r\n  constructor(client: APIClient, response: Response, body: unknown, options: FinalRequestOptions) {\r\n    this.#client = client;\r\n    this.options = options;\r\n    this.response = response;\r\n    this.body = body;\r\n  }\r\n\r\n  /**\r\n   * @deprecated Use nextPageInfo instead\r\n   */\r\n  abstract nextPageParams(): Partial<Record<string, unknown>> | null;\r\n  abstract nextPageInfo(): PageInfo | null;\r\n\r\n  abstract getPaginatedItems(): Item[];\r\n\r\n  hasNextPage(): boolean {\r\n    const items = this.getPaginatedItems();\r\n    if (!items.length) return false;\r\n    return this.nextPageInfo() != null;\r\n  }\r\n\r\n  async getNextPage(): Promise<this> {\r\n    const nextInfo = this.nextPageInfo();\r\n    if (!nextInfo) {\r\n      throw new GroqError(\r\n        'No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.',\r\n      );\r\n    }\r\n    const nextOptions = { ...this.options };\r\n    if ('params' in nextInfo && typeof nextOptions.query === 'object') {\r\n      nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\r\n    } else if ('url' in nextInfo) {\r\n      const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\r\n      for (const [key, value] of params) {\r\n        nextInfo.url.searchParams.set(key, value as any);\r\n      }\r\n      nextOptions.query = undefined;\r\n      nextOptions.path = nextInfo.url.toString();\r\n    }\r\n    return await this.#client.requestAPIList(this.constructor as any, nextOptions);\r\n  }\r\n\r\n  async *iterPages(): AsyncGenerator<this> {\r\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n    let page: this = this;\r\n    yield page;\r\n    while (page.hasNextPage()) {\r\n      page = await page.getNextPage();\r\n      yield page;\r\n    }\r\n  }\r\n\r\n  async *[Symbol.asyncIterator](): AsyncGenerator<Item> {\r\n    for await (const page of this.iterPages()) {\r\n      for (const item of page.getPaginatedItems()) {\r\n        yield item;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\r\n *\r\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\r\n *\r\n *    for await (const item of client.items.list()) {\r\n *      console.log(item)\r\n *    }\r\n */\r\nexport class PagePromise<\r\n    PageClass extends AbstractPage<Item>,\r\n    Item = ReturnType<PageClass['getPaginatedItems']>[number],\r\n  >\r\n  extends APIPromise<PageClass>\r\n  implements AsyncIterable<Item>\r\n{\r\n  constructor(\r\n    client: APIClient,\r\n    request: Promise<APIResponseProps>,\r\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\r\n  ) {\r\n    super(\r\n      request,\r\n      async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Allow auto-paginating iteration on an unawaited list call, eg:\r\n   *\r\n   *    for await (const item of client.items.list()) {\r\n   *      console.log(item)\r\n   *    }\r\n   */\r\n  async *[Symbol.asyncIterator](): AsyncGenerator<Item> {\r\n    const page = await this;\r\n    for await (const item of page) {\r\n      yield item;\r\n    }\r\n  }\r\n}\r\n\r\nexport const createResponseHeaders = (\r\n  headers: Awaited<ReturnType<Fetch>>['headers'],\r\n): Record<string, string> => {\r\n  return new Proxy(\r\n    Object.fromEntries(\r\n      // @ts-ignore\r\n      headers.entries(),\r\n    ),\r\n    {\r\n      get(target, name) {\r\n        const key = name.toString();\r\n        return target[key.toLowerCase()] || target[key];\r\n      },\r\n    },\r\n  );\r\n};\r\n\r\ntype HTTPMethod = 'get' | 'post' | 'put' | 'patch' | 'delete';\r\n\r\nexport type RequestClient = { fetch: Fetch };\r\nexport type Headers = Record<string, string | null | undefined>;\r\nexport type DefaultQuery = Record<string, string | undefined>;\r\nexport type KeysEnum<T> = { [P in keyof Required<T>]: true };\r\n\r\nexport type RequestOptions<\r\n  Req = unknown | Record<string, unknown> | Readable | BlobLike | ArrayBufferView | ArrayBuffer,\r\n> = {\r\n  method?: HTTPMethod;\r\n  path?: string;\r\n  query?: Req | undefined;\r\n  body?: Req | null | undefined;\r\n  headers?: Headers | undefined;\r\n\r\n  maxRetries?: number;\r\n  stream?: boolean | undefined;\r\n  timeout?: number;\r\n  httpAgent?: Agent;\r\n  signal?: AbortSignal | undefined | null;\r\n  idempotencyKey?: string;\r\n\r\n  __binaryRequest?: boolean | undefined;\r\n  __binaryResponse?: boolean | undefined;\r\n  __streamClass?: typeof Stream;\r\n};\r\n\r\n// This is required so that we can determine if a given object matches the RequestOptions\r\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\r\n// compiler such that any missing / extraneous keys will cause an error.\r\nconst requestOptionsKeys: KeysEnum<RequestOptions> = {\r\n  method: true,\r\n  path: true,\r\n  query: true,\r\n  body: true,\r\n  headers: true,\r\n\r\n  maxRetries: true,\r\n  stream: true,\r\n  timeout: true,\r\n  httpAgent: true,\r\n  signal: true,\r\n  idempotencyKey: true,\r\n\r\n  __binaryRequest: true,\r\n  __binaryResponse: true,\r\n  __streamClass: true,\r\n};\r\n\r\nexport const isRequestOptions = (obj: unknown): obj is RequestOptions => {\r\n  return (\r\n    typeof obj === 'object' &&\r\n    obj !== null &&\r\n    !isEmptyObj(obj) &&\r\n    Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k))\r\n  );\r\n};\r\n\r\nexport type FinalRequestOptions<Req = unknown | Record<string, unknown> | Readable | DataView> =\r\n  RequestOptions<Req> & {\r\n    method: HTTPMethod;\r\n    path: string;\r\n  };\r\n\r\ndeclare const Deno: any;\r\ndeclare const EdgeRuntime: any;\r\ntype Arch = 'x32' | 'x64' | 'arm' | 'arm64' | `other:${string}` | 'unknown';\r\ntype PlatformName =\r\n  | 'MacOS'\r\n  | 'Linux'\r\n  | 'Windows'\r\n  | 'FreeBSD'\r\n  | 'OpenBSD'\r\n  | 'iOS'\r\n  | 'Android'\r\n  | `Other:${string}`\r\n  | 'Unknown';\r\ntype Browser = 'ie' | 'edge' | 'chrome' | 'firefox' | 'safari';\r\ntype PlatformProperties = {\r\n  'X-Stainless-Lang': 'js';\r\n  'X-Stainless-Package-Version': string;\r\n  'X-Stainless-OS': PlatformName;\r\n  'X-Stainless-Arch': Arch;\r\n  'X-Stainless-Runtime': 'node' | 'deno' | 'edge' | `browser:${Browser}` | 'unknown';\r\n  'X-Stainless-Runtime-Version': string;\r\n};\r\nconst getPlatformProperties = (): PlatformProperties => {\r\n  if (typeof Deno !== 'undefined' && Deno.build != null) {\r\n    return {\r\n      'X-Stainless-Lang': 'js',\r\n      'X-Stainless-Package-Version': VERSION,\r\n      'X-Stainless-OS': normalizePlatform(Deno.build.os),\r\n      'X-Stainless-Arch': normalizeArch(Deno.build.arch),\r\n      'X-Stainless-Runtime': 'deno',\r\n      'X-Stainless-Runtime-Version':\r\n        typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\r\n    };\r\n  }\r\n  if (typeof EdgeRuntime !== 'undefined') {\r\n    return {\r\n      'X-Stainless-Lang': 'js',\r\n      'X-Stainless-Package-Version': VERSION,\r\n      'X-Stainless-OS': 'Unknown',\r\n      'X-Stainless-Arch': `other:${EdgeRuntime}`,\r\n      'X-Stainless-Runtime': 'edge',\r\n      'X-Stainless-Runtime-Version': process.version,\r\n    };\r\n  }\r\n  // Check if Node.js\r\n  if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\r\n    return {\r\n      'X-Stainless-Lang': 'js',\r\n      'X-Stainless-Package-Version': VERSION,\r\n      'X-Stainless-OS': normalizePlatform(process.platform),\r\n      'X-Stainless-Arch': normalizeArch(process.arch),\r\n      'X-Stainless-Runtime': 'node',\r\n      'X-Stainless-Runtime-Version': process.version,\r\n    };\r\n  }\r\n\r\n  const browserInfo = getBrowserInfo();\r\n  if (browserInfo) {\r\n    return {\r\n      'X-Stainless-Lang': 'js',\r\n      'X-Stainless-Package-Version': VERSION,\r\n      'X-Stainless-OS': 'Unknown',\r\n      'X-Stainless-Arch': 'unknown',\r\n      'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\r\n      'X-Stainless-Runtime-Version': browserInfo.version,\r\n    };\r\n  }\r\n\r\n  // TODO add support for Cloudflare workers, etc.\r\n  return {\r\n    'X-Stainless-Lang': 'js',\r\n    'X-Stainless-Package-Version': VERSION,\r\n    'X-Stainless-OS': 'Unknown',\r\n    'X-Stainless-Arch': 'unknown',\r\n    'X-Stainless-Runtime': 'unknown',\r\n    'X-Stainless-Runtime-Version': 'unknown',\r\n  };\r\n};\r\n\r\ntype BrowserInfo = {\r\n  browser: Browser;\r\n  version: string;\r\n};\r\n\r\ndeclare const navigator: { userAgent: string } | undefined;\r\n\r\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\r\nfunction getBrowserInfo(): BrowserInfo | null {\r\n  if (typeof navigator === 'undefined' || !navigator) {\r\n    return null;\r\n  }\r\n\r\n  // NOTE: The order matters here!\r\n  const browserPatterns = [\r\n    { key: 'edge' as const, pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\r\n    { key: 'ie' as const, pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\r\n    { key: 'ie' as const, pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\r\n    { key: 'chrome' as const, pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\r\n    { key: 'firefox' as const, pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\r\n    { key: 'safari' as const, pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\r\n  ];\r\n\r\n  // Find the FIRST matching browser\r\n  for (const { key, pattern } of browserPatterns) {\r\n    const match = pattern.exec(navigator.userAgent);\r\n    if (match) {\r\n      const major = match[1] || 0;\r\n      const minor = match[2] || 0;\r\n      const patch = match[3] || 0;\r\n\r\n      return { browser: key, version: `${major}.${minor}.${patch}` };\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nconst normalizeArch = (arch: string): Arch => {\r\n  // Node docs:\r\n  // - https://nodejs.org/api/process.html#processarch\r\n  // Deno docs:\r\n  // - https://doc.deno.land/deno/stable/~/Deno.build\r\n  if (arch === 'x32') return 'x32';\r\n  if (arch === 'x86_64' || arch === 'x64') return 'x64';\r\n  if (arch === 'arm') return 'arm';\r\n  if (arch === 'aarch64' || arch === 'arm64') return 'arm64';\r\n  if (arch) return `other:${arch}`;\r\n  return 'unknown';\r\n};\r\n\r\nconst normalizePlatform = (platform: string): PlatformName => {\r\n  // Node platforms:\r\n  // - https://nodejs.org/api/process.html#processplatform\r\n  // Deno platforms:\r\n  // - https://doc.deno.land/deno/stable/~/Deno.build\r\n  // - https://github.com/denoland/deno/issues/14799\r\n\r\n  platform = platform.toLowerCase();\r\n\r\n  // NOTE: this iOS check is untested and may not work\r\n  // Node does not work natively on IOS, there is a fork at\r\n  // https://github.com/nodejs-mobile/nodejs-mobile\r\n  // however it is unknown at the time of writing how to detect if it is running\r\n  if (platform.includes('ios')) return 'iOS';\r\n  if (platform === 'android') return 'Android';\r\n  if (platform === 'darwin') return 'MacOS';\r\n  if (platform === 'win32') return 'Windows';\r\n  if (platform === 'freebsd') return 'FreeBSD';\r\n  if (platform === 'openbsd') return 'OpenBSD';\r\n  if (platform === 'linux') return 'Linux';\r\n  if (platform) return `Other:${platform}`;\r\n  return 'Unknown';\r\n};\r\n\r\nlet _platformHeaders: PlatformProperties;\r\nconst getPlatformHeaders = () => {\r\n  return (_platformHeaders ??= getPlatformProperties());\r\n};\r\n\r\nexport const safeJSON = (text: string) => {\r\n  try {\r\n    return JSON.parse(text);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\n// https://url.spec.whatwg.org/#url-scheme-string\r\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\r\nconst isAbsoluteURL = (url: string): boolean => {\r\n  return startsWithSchemeRegexp.test(url);\r\n};\r\n\r\nexport const sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nconst validatePositiveInteger = (name: string, n: unknown): number => {\r\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\r\n    throw new GroqError(`${name} must be an integer`);\r\n  }\r\n  if (n < 0) {\r\n    throw new GroqError(`${name} must be a positive integer`);\r\n  }\r\n  return n;\r\n};\r\n\r\nexport const castToError = (err: any): Error => {\r\n  if (err instanceof Error) return err;\r\n  if (typeof err === 'object' && err !== null) {\r\n    try {\r\n      return new Error(JSON.stringify(err));\r\n    } catch {}\r\n  }\r\n  return new Error(err);\r\n};\r\n\r\nexport const ensurePresent = <T>(value: T | null | undefined): T => {\r\n  if (value == null) throw new GroqError(`Expected a value to be given but received ${value} instead.`);\r\n  return value;\r\n};\r\n\r\n/**\r\n * Read an environment variable.\r\n *\r\n * Trims beginning and trailing whitespace.\r\n *\r\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\r\n */\r\nexport const readEnv = (env: string): string | undefined => {\r\n  if (typeof process !== 'undefined') {\r\n    return process.env?.[env]?.trim() ?? undefined;\r\n  }\r\n  if (typeof Deno !== 'undefined') {\r\n    return Deno.env?.get?.(env)?.trim();\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const coerceInteger = (value: unknown): number => {\r\n  if (typeof value === 'number') return Math.round(value);\r\n  if (typeof value === 'string') return parseInt(value, 10);\r\n\r\n  throw new GroqError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\r\n};\r\n\r\nexport const coerceFloat = (value: unknown): number => {\r\n  if (typeof value === 'number') return value;\r\n  if (typeof value === 'string') return parseFloat(value);\r\n\r\n  throw new GroqError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\r\n};\r\n\r\nexport const coerceBoolean = (value: unknown): boolean => {\r\n  if (typeof value === 'boolean') return value;\r\n  if (typeof value === 'string') return value === 'true';\r\n  return Boolean(value);\r\n};\r\n\r\nexport const maybeCoerceInteger = (value: unknown): number | undefined => {\r\n  if (value === undefined) {\r\n    return undefined;\r\n  }\r\n  return coerceInteger(value);\r\n};\r\n\r\nexport const maybeCoerceFloat = (value: unknown): number | undefined => {\r\n  if (value === undefined) {\r\n    return undefined;\r\n  }\r\n  return coerceFloat(value);\r\n};\r\n\r\nexport const maybeCoerceBoolean = (value: unknown): boolean | undefined => {\r\n  if (value === undefined) {\r\n    return undefined;\r\n  }\r\n  return coerceBoolean(value);\r\n};\r\n\r\n// https://stackoverflow.com/a/34491287\r\nexport function isEmptyObj(obj: Object | null | undefined): boolean {\r\n  if (!obj) return true;\r\n  for (const _k in obj) return false;\r\n  return true;\r\n}\r\n\r\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\r\nexport function hasOwn(obj: Object, key: string): boolean {\r\n  return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\n\r\n/**\r\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\r\n * using lower-case for all properties,\r\n * ignoring any keys with undefined values,\r\n * and deleting any keys with null values.\r\n */\r\nfunction applyHeadersMut(targetHeaders: Headers, newHeaders: Headers): void {\r\n  for (const k in newHeaders) {\r\n    if (!hasOwn(newHeaders, k)) continue;\r\n    const lowerKey = k.toLowerCase();\r\n    if (!lowerKey) continue;\r\n\r\n    const val = newHeaders[k];\r\n\r\n    if (val === null) {\r\n      delete targetHeaders[lowerKey];\r\n    } else if (val !== undefined) {\r\n      targetHeaders[lowerKey] = val;\r\n    }\r\n  }\r\n}\r\n\r\nexport function debug(action: string, ...args: any[]) {\r\n  if (typeof process !== 'undefined' && process?.env?.['DEBUG'] === 'true') {\r\n    console.log(`Groq:DEBUG:${action}`, ...args);\r\n  }\r\n}\r\n\r\n/**\r\n * https://stackoverflow.com/a/2117523\r\n */\r\nconst uuid4 = () => {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\r\n    const r = (Math.random() * 16) | 0;\r\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n};\r\n\r\nexport const isRunningInBrowser = () => {\r\n  return (\r\n    // @ts-ignore\r\n    typeof window !== 'undefined' &&\r\n    // @ts-ignore\r\n    typeof window.document !== 'undefined' &&\r\n    // @ts-ignore\r\n    typeof navigator !== 'undefined'\r\n  );\r\n};\r\n\r\nexport interface HeadersProtocol {\r\n  get: (header: string) => string | null | undefined;\r\n}\r\nexport type HeadersLike = Record<string, string | string[] | undefined> | HeadersProtocol;\r\n\r\nexport const isHeadersProtocol = (headers: any): headers is HeadersProtocol => {\r\n  return typeof headers?.get === 'function';\r\n};\r\n\r\nexport const getRequiredHeader = (headers: HeadersLike | Headers, header: string): string => {\r\n  const foundHeader = getHeader(headers, header);\r\n  if (foundHeader === undefined) {\r\n    throw new Error(`Could not find ${header} header`);\r\n  }\r\n  return foundHeader;\r\n};\r\n\r\nexport const getHeader = (headers: HeadersLike | Headers, header: string): string | undefined => {\r\n  const lowerCasedHeader = header.toLowerCase();\r\n  if (isHeadersProtocol(headers)) {\r\n    // to deal with the case where the header looks like Stainless-Event-Id\r\n    const intercapsHeader =\r\n      header[0]?.toUpperCase() +\r\n      header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\r\n    for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\r\n      const value = headers.get(key);\r\n      if (value) {\r\n        return value;\r\n      }\r\n    }\r\n  }\r\n\r\n  for (const [key, value] of Object.entries(headers)) {\r\n    if (key.toLowerCase() === lowerCasedHeader) {\r\n      if (Array.isArray(value)) {\r\n        if (value.length <= 1) return value[0];\r\n        console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\r\n        return value[0];\r\n      }\r\n      return value;\r\n    }\r\n  }\r\n\r\n  return undefined;\r\n};\r\n\r\n/**\r\n * Encodes a string to Base64 format.\r\n */\r\nexport const toBase64 = (str: string | null | undefined): string => {\r\n  if (!str) return '';\r\n  if (typeof Buffer !== 'undefined') {\r\n    return Buffer.from(str).toString('base64');\r\n  }\r\n\r\n  if (typeof btoa !== 'undefined') {\r\n    return btoa(str);\r\n  }\r\n\r\n  throw new GroqError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\r\n};\r\n\r\nexport function isObj(obj: unknown): obj is Record<string, unknown> {\r\n  return obj != null && typeof obj === 'object' && !Array.isArray(obj);\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}