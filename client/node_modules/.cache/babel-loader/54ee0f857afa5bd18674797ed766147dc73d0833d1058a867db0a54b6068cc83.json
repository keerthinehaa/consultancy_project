{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _a;\nimport * as Core from \"./core.mjs\";\nimport * as Errors from \"./error.mjs\";\nimport * as Uploads from \"./uploads.mjs\";\nimport * as API from \"./resources/index.mjs\";\nimport { Batches } from \"./resources/batches.mjs\";\nimport { Completions } from \"./resources/completions.mjs\";\nimport { Embeddings } from \"./resources/embeddings.mjs\";\nimport { Files } from \"./resources/files.mjs\";\nimport { Models } from \"./resources/models.mjs\";\nimport { Audio } from \"./resources/audio/audio.mjs\";\nimport { Chat } from \"./resources/chat/chat.mjs\";\n/**\r\n * API Client for interfacing with the Groq API.\r\n */\nexport class Groq extends Core.APIClient {\n  /**\r\n   * API Client for interfacing with the Groq API.\r\n   *\r\n   * @param {string | undefined} [opts.apiKey=process.env['GROQ_API_KEY'] ?? undefined]\r\n   * @param {string} [opts.baseURL=process.env['GROQ_BASE_URL'] ?? https://api.groq.com] - Override the default base URL for the API.\r\n   * @param {number} [opts.timeout=1 minute] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\r\n   * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\r\n   * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\r\n   * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\r\n   * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\r\n   * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\r\n   * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\r\n   */\n  constructor({\n    baseURL = Core.readEnv('GROQ_BASE_URL'),\n    apiKey = Core.readEnv('GROQ_API_KEY'),\n    ...opts\n  } = {}) {\n    if (apiKey === undefined) {\n      throw new Errors.GroqError(\"The GROQ_API_KEY environment variable is missing or empty; either provide it, or instantiate the Groq client with an apiKey option, like new Groq({ apiKey: 'My API Key' }).\");\n    }\n    const options = {\n      apiKey,\n      ...opts,\n      baseURL: baseURL || `https://api.groq.com`\n    };\n    if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\n      throw new Errors.GroqError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew Groq({ apiKey, dangerouslyAllowBrowser: true })\");\n    }\n    super({\n      baseURL: options.baseURL,\n      timeout: options.timeout ?? 60000 /* 1 minute */,\n      httpAgent: options.httpAgent,\n      maxRetries: options.maxRetries,\n      fetch: options.fetch\n    });\n    this.completions = new API.Completions(this);\n    this.chat = new API.Chat(this);\n    this.embeddings = new API.Embeddings(this);\n    this.audio = new API.Audio(this);\n    this.models = new API.Models(this);\n    this.batches = new API.Batches(this);\n    this.files = new API.Files(this);\n    this._options = options;\n    this.apiKey = apiKey;\n  }\n  defaultQuery() {\n    return this._options.defaultQuery;\n  }\n  defaultHeaders(opts) {\n    return {\n      ...super.defaultHeaders(opts),\n      ...this._options.defaultHeaders\n    };\n  }\n  authHeaders(opts) {\n    return {\n      Authorization: `Bearer ${this.apiKey}`\n    };\n  }\n}\n_a = Groq;\nGroq.Groq = _a;\nGroq.DEFAULT_TIMEOUT = 60000; // 1 minute\nGroq.GroqError = Errors.GroqError;\nGroq.APIError = Errors.APIError;\nGroq.APIConnectionError = Errors.APIConnectionError;\nGroq.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nGroq.APIUserAbortError = Errors.APIUserAbortError;\nGroq.NotFoundError = Errors.NotFoundError;\nGroq.ConflictError = Errors.ConflictError;\nGroq.RateLimitError = Errors.RateLimitError;\nGroq.BadRequestError = Errors.BadRequestError;\nGroq.AuthenticationError = Errors.AuthenticationError;\nGroq.InternalServerError = Errors.InternalServerError;\nGroq.PermissionDeniedError = Errors.PermissionDeniedError;\nGroq.UnprocessableEntityError = Errors.UnprocessableEntityError;\nGroq.toFile = Uploads.toFile;\nGroq.fileFromPath = Uploads.fileFromPath;\nGroq.Completions = Completions;\nGroq.Chat = Chat;\nGroq.Embeddings = Embeddings;\nGroq.Audio = Audio;\nGroq.Models = Models;\nGroq.Batches = Batches;\nGroq.Files = Files;\nexport { toFile, fileFromPath } from \"./uploads.mjs\";\nexport { GroqError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, NotFoundError, ConflictError, RateLimitError, BadRequestError, AuthenticationError, InternalServerError, PermissionDeniedError, UnprocessableEntityError } from \"./error.mjs\";\nexport default Groq;","map":{"version":3,"names":["Core","Errors","Uploads","API","Batches","Completions","Embeddings","Files","Models","Audio","Chat","Groq","APIClient","constructor","baseURL","readEnv","apiKey","opts","undefined","GroqError","options","dangerouslyAllowBrowser","isRunningInBrowser","timeout","httpAgent","maxRetries","fetch","completions","chat","embeddings","audio","models","batches","files","_options","defaultQuery","defaultHeaders","authHeaders","Authorization","_a","DEFAULT_TIMEOUT","APIError","APIConnectionError","APIConnectionTimeoutError","APIUserAbortError","NotFoundError","ConflictError","RateLimitError","BadRequestError","AuthenticationError","InternalServerError","PermissionDeniedError","UnprocessableEntityError","toFile","fileFromPath"],"sources":["D:\\consultancy_project\\consultancy_project\\client\\node_modules\\groq-sdk\\src\\index.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\r\n\r\nimport { type Agent } from './_shims/index';\r\nimport * as Core from './core';\r\nimport * as Errors from './error';\r\nimport * as Uploads from './uploads';\r\nimport * as API from './resources/index';\r\nimport {\r\n  BatchCreateParams,\r\n  BatchCreateResponse,\r\n  BatchListResponse,\r\n  BatchRetrieveResponse,\r\n  Batches,\r\n} from './resources/batches';\r\nimport { CompletionUsage, Completions } from './resources/completions';\r\nimport {\r\n  CreateEmbeddingResponse,\r\n  Embedding,\r\n  EmbeddingCreateParams,\r\n  Embeddings,\r\n} from './resources/embeddings';\r\nimport {\r\n  FileCreateParams,\r\n  FileCreateResponse,\r\n  FileDeleteResponse,\r\n  FileInfoResponse,\r\n  FileListResponse,\r\n  Files,\r\n} from './resources/files';\r\nimport { Model, ModelDeleted, ModelListResponse, Models } from './resources/models';\r\nimport { Audio } from './resources/audio/audio';\r\nimport { Chat } from './resources/chat/chat';\r\n\r\nexport interface ClientOptions {\r\n  /**\r\n   * Defaults to process.env['GROQ_API_KEY'].\r\n   */\r\n  apiKey?: string | undefined;\r\n\r\n  /**\r\n   * Override the default base URL for the API, e.g., \"https://api.example.com/v2/\"\r\n   *\r\n   * Defaults to process.env['GROQ_BASE_URL'].\r\n   */\r\n  baseURL?: string | null | undefined;\r\n\r\n  /**\r\n   * The maximum amount of time (in milliseconds) that the client should wait for a response\r\n   * from the server before timing out a single request.\r\n   *\r\n   * Note that request timeouts are retried by default, so in a worst-case scenario you may wait\r\n   * much longer than this timeout before the promise succeeds or fails.\r\n   */\r\n  timeout?: number | undefined;\r\n\r\n  /**\r\n   * An HTTP agent used to manage HTTP(S) connections.\r\n   *\r\n   * If not provided, an agent will be constructed by default in the Node.js environment,\r\n   * otherwise no agent is used.\r\n   */\r\n  httpAgent?: Agent | undefined;\r\n\r\n  /**\r\n   * Specify a custom `fetch` function implementation.\r\n   *\r\n   * If not provided, we use `node-fetch` on Node.js and otherwise expect that `fetch` is\r\n   * defined globally.\r\n   */\r\n  fetch?: Core.Fetch | undefined;\r\n\r\n  /**\r\n   * The maximum number of times that the client will retry a request in case of a\r\n   * temporary failure, like a network error or a 5XX error from the server.\r\n   *\r\n   * @default 2\r\n   */\r\n  maxRetries?: number | undefined;\r\n\r\n  /**\r\n   * Default headers to include with every request to the API.\r\n   *\r\n   * These can be removed in individual requests by explicitly setting the\r\n   * header to `undefined` or `null` in request options.\r\n   */\r\n  defaultHeaders?: Core.Headers | undefined;\r\n\r\n  /**\r\n   * Default query parameters to include with every request to the API.\r\n   *\r\n   * These can be removed in individual requests by explicitly setting the\r\n   * param to `undefined` in request options.\r\n   */\r\n  defaultQuery?: Core.DefaultQuery | undefined;\r\n\r\n  /**\r\n   * By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\r\n   * Only set this option to `true` if you understand the risks and have appropriate mitigations in place.\r\n   */\r\n  dangerouslyAllowBrowser?: boolean | undefined;\r\n}\r\n\r\n/**\r\n * API Client for interfacing with the Groq API.\r\n */\r\nexport class Groq extends Core.APIClient {\r\n  apiKey: string;\r\n\r\n  private _options: ClientOptions;\r\n\r\n  /**\r\n   * API Client for interfacing with the Groq API.\r\n   *\r\n   * @param {string | undefined} [opts.apiKey=process.env['GROQ_API_KEY'] ?? undefined]\r\n   * @param {string} [opts.baseURL=process.env['GROQ_BASE_URL'] ?? https://api.groq.com] - Override the default base URL for the API.\r\n   * @param {number} [opts.timeout=1 minute] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\r\n   * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\r\n   * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\r\n   * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\r\n   * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\r\n   * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\r\n   * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\r\n   */\r\n  constructor({\r\n    baseURL = Core.readEnv('GROQ_BASE_URL'),\r\n    apiKey = Core.readEnv('GROQ_API_KEY'),\r\n    ...opts\r\n  }: ClientOptions = {}) {\r\n    if (apiKey === undefined) {\r\n      throw new Errors.GroqError(\r\n        \"The GROQ_API_KEY environment variable is missing or empty; either provide it, or instantiate the Groq client with an apiKey option, like new Groq({ apiKey: 'My API Key' }).\",\r\n      );\r\n    }\r\n\r\n    const options: ClientOptions = {\r\n      apiKey,\r\n      ...opts,\r\n      baseURL: baseURL || `https://api.groq.com`,\r\n    };\r\n\r\n    if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\r\n      throw new Errors.GroqError(\r\n        \"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew Groq({ apiKey, dangerouslyAllowBrowser: true })\",\r\n      );\r\n    }\r\n\r\n    super({\r\n      baseURL: options.baseURL!,\r\n      timeout: options.timeout ?? 60000 /* 1 minute */,\r\n      httpAgent: options.httpAgent,\r\n      maxRetries: options.maxRetries,\r\n      fetch: options.fetch,\r\n    });\r\n\r\n    this._options = options;\r\n\r\n    this.apiKey = apiKey;\r\n  }\r\n\r\n  completions: API.Completions = new API.Completions(this);\r\n  chat: API.Chat = new API.Chat(this);\r\n  embeddings: API.Embeddings = new API.Embeddings(this);\r\n  audio: API.Audio = new API.Audio(this);\r\n  models: API.Models = new API.Models(this);\r\n  batches: API.Batches = new API.Batches(this);\r\n  files: API.Files = new API.Files(this);\r\n\r\n  protected override defaultQuery(): Core.DefaultQuery | undefined {\r\n    return this._options.defaultQuery;\r\n  }\r\n\r\n  protected override defaultHeaders(opts: Core.FinalRequestOptions): Core.Headers {\r\n    return {\r\n      ...super.defaultHeaders(opts),\r\n      ...this._options.defaultHeaders,\r\n    };\r\n  }\r\n\r\n  protected override authHeaders(opts: Core.FinalRequestOptions): Core.Headers {\r\n    return { Authorization: `Bearer ${this.apiKey}` };\r\n  }\r\n\r\n  static Groq = this;\r\n  static DEFAULT_TIMEOUT = 60000; // 1 minute\r\n\r\n  static GroqError = Errors.GroqError;\r\n  static APIError = Errors.APIError;\r\n  static APIConnectionError = Errors.APIConnectionError;\r\n  static APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\r\n  static APIUserAbortError = Errors.APIUserAbortError;\r\n  static NotFoundError = Errors.NotFoundError;\r\n  static ConflictError = Errors.ConflictError;\r\n  static RateLimitError = Errors.RateLimitError;\r\n  static BadRequestError = Errors.BadRequestError;\r\n  static AuthenticationError = Errors.AuthenticationError;\r\n  static InternalServerError = Errors.InternalServerError;\r\n  static PermissionDeniedError = Errors.PermissionDeniedError;\r\n  static UnprocessableEntityError = Errors.UnprocessableEntityError;\r\n\r\n  static toFile = Uploads.toFile;\r\n  static fileFromPath = Uploads.fileFromPath;\r\n}\r\n\r\nGroq.Completions = Completions;\r\nGroq.Chat = Chat;\r\nGroq.Embeddings = Embeddings;\r\nGroq.Audio = Audio;\r\nGroq.Models = Models;\r\nGroq.Batches = Batches;\r\nGroq.Files = Files;\r\nexport declare namespace Groq {\r\n  export type RequestOptions = Core.RequestOptions;\r\n\r\n  export { Completions as Completions, type CompletionUsage as CompletionUsage };\r\n\r\n  export { Chat as Chat };\r\n\r\n  export {\r\n    Embeddings as Embeddings,\r\n    type CreateEmbeddingResponse as CreateEmbeddingResponse,\r\n    type Embedding as Embedding,\r\n    type EmbeddingCreateParams as EmbeddingCreateParams,\r\n  };\r\n\r\n  export { Audio as Audio };\r\n\r\n  export {\r\n    Models as Models,\r\n    type Model as Model,\r\n    type ModelDeleted as ModelDeleted,\r\n    type ModelListResponse as ModelListResponse,\r\n  };\r\n\r\n  export {\r\n    Batches as Batches,\r\n    type BatchCreateResponse as BatchCreateResponse,\r\n    type BatchRetrieveResponse as BatchRetrieveResponse,\r\n    type BatchListResponse as BatchListResponse,\r\n    type BatchCreateParams as BatchCreateParams,\r\n  };\r\n\r\n  export {\r\n    Files as Files,\r\n    type FileCreateResponse as FileCreateResponse,\r\n    type FileListResponse as FileListResponse,\r\n    type FileDeleteResponse as FileDeleteResponse,\r\n    type FileInfoResponse as FileInfoResponse,\r\n    type FileCreateParams as FileCreateParams,\r\n  };\r\n\r\n  export type ErrorObject = API.ErrorObject;\r\n  export type FunctionDefinition = API.FunctionDefinition;\r\n  export type FunctionParameters = API.FunctionParameters;\r\n}\r\n\r\nexport { toFile, fileFromPath } from './uploads';\r\nexport {\r\n  GroqError,\r\n  APIError,\r\n  APIConnectionError,\r\n  APIConnectionTimeoutError,\r\n  APIUserAbortError,\r\n  NotFoundError,\r\n  ConflictError,\r\n  RateLimitError,\r\n  BadRequestError,\r\n  AuthenticationError,\r\n  InternalServerError,\r\n  PermissionDeniedError,\r\n  UnprocessableEntityError,\r\n} from './error';\r\n\r\nexport default Groq;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}