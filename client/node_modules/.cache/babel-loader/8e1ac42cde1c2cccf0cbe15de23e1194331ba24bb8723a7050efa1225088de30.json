{"ast":null,"code":"export let auto = false;\nexport let kind = undefined;\nexport let fetch = undefined;\nexport let Request = undefined;\nexport let Response = undefined;\nexport let Headers = undefined;\nexport let FormData = undefined;\nexport let Blob = undefined;\nexport let File = undefined;\nexport let ReadableStream = undefined;\nexport let getMultipartRequestOptions = undefined;\nexport let getDefaultAgent = undefined;\nexport let fileFromPath = undefined;\nexport let isFsReadStream = undefined;\nexport function setShims(shims, options = {\n  auto: false\n}) {\n  if (auto) {\n    throw new Error(`you must \\`import 'groq-sdk/shims/${shims.kind}'\\` before importing anything else from groq-sdk`);\n  }\n  if (kind) {\n    throw new Error(`can't \\`import 'groq-sdk/shims/${shims.kind}'\\` after \\`import 'groq-sdk/shims/${kind}'\\``);\n  }\n  auto = options.auto;\n  kind = shims.kind;\n  fetch = shims.fetch;\n  Request = shims.Request;\n  Response = shims.Response;\n  Headers = shims.Headers;\n  FormData = shims.FormData;\n  Blob = shims.Blob;\n  File = shims.File;\n  ReadableStream = shims.ReadableStream;\n  getMultipartRequestOptions = shims.getMultipartRequestOptions;\n  getDefaultAgent = shims.getDefaultAgent;\n  fileFromPath = shims.fileFromPath;\n  isFsReadStream = shims.isFsReadStream;\n}","map":{"version":3,"names":["auto","kind","undefined","fetch","Request","Response","Headers","FormData","Blob","File","ReadableStream","getMultipartRequestOptions","getDefaultAgent","fileFromPath","isFsReadStream","setShims","shims","options","Error"],"sources":["D:\\consultancy_project\\consultancy_project\\client\\node_modules\\groq-sdk\\src\\_shims\\registry.ts"],"sourcesContent":["/**\r\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\r\n */\r\nimport { type RequestOptions } from '../core';\r\n\r\nexport interface Shims {\r\n  kind: string;\r\n  fetch: any;\r\n  Request: any;\r\n  Response: any;\r\n  Headers: any;\r\n  FormData: any;\r\n  Blob: any;\r\n  File: any;\r\n  ReadableStream: any;\r\n  getMultipartRequestOptions: <T = Record<string, unknown>>(\r\n    form: Shims['FormData'],\r\n    opts: RequestOptions<T>,\r\n  ) => Promise<RequestOptions<T>>;\r\n  getDefaultAgent: (url: string) => any;\r\n  fileFromPath:\r\n    | ((path: string, filename?: string, options?: {}) => Promise<Shims['File']>)\r\n    | ((path: string, options?: {}) => Promise<Shims['File']>);\r\n  isFsReadStream: (value: any) => boolean;\r\n}\r\n\r\nexport let auto = false;\r\nexport let kind: Shims['kind'] | undefined = undefined;\r\nexport let fetch: Shims['fetch'] | undefined = undefined;\r\nexport let Request: Shims['Request'] | undefined = undefined;\r\nexport let Response: Shims['Response'] | undefined = undefined;\r\nexport let Headers: Shims['Headers'] | undefined = undefined;\r\nexport let FormData: Shims['FormData'] | undefined = undefined;\r\nexport let Blob: Shims['Blob'] | undefined = undefined;\r\nexport let File: Shims['File'] | undefined = undefined;\r\nexport let ReadableStream: Shims['ReadableStream'] | undefined = undefined;\r\nexport let getMultipartRequestOptions: Shims['getMultipartRequestOptions'] | undefined = undefined;\r\nexport let getDefaultAgent: Shims['getDefaultAgent'] | undefined = undefined;\r\nexport let fileFromPath: Shims['fileFromPath'] | undefined = undefined;\r\nexport let isFsReadStream: Shims['isFsReadStream'] | undefined = undefined;\r\n\r\nexport function setShims(shims: Shims, options: { auto: boolean } = { auto: false }) {\r\n  if (auto) {\r\n    throw new Error(\r\n      `you must \\`import 'groq-sdk/shims/${shims.kind}'\\` before importing anything else from groq-sdk`,\r\n    );\r\n  }\r\n  if (kind) {\r\n    throw new Error(\r\n      `can't \\`import 'groq-sdk/shims/${shims.kind}'\\` after \\`import 'groq-sdk/shims/${kind}'\\``,\r\n    );\r\n  }\r\n  auto = options.auto;\r\n  kind = shims.kind;\r\n  fetch = shims.fetch;\r\n  Request = shims.Request;\r\n  Response = shims.Response;\r\n  Headers = shims.Headers;\r\n  FormData = shims.FormData;\r\n  Blob = shims.Blob;\r\n  File = shims.File;\r\n  ReadableStream = shims.ReadableStream;\r\n  getMultipartRequestOptions = shims.getMultipartRequestOptions;\r\n  getDefaultAgent = shims.getDefaultAgent;\r\n  fileFromPath = shims.fileFromPath;\r\n  isFsReadStream = shims.isFsReadStream;\r\n}\r\n"],"mappings":"AA0BA,OAAO,IAAIA,IAAI,GAAG,KAAK;AACvB,OAAO,IAAIC,IAAI,GAA8BC,SAAS;AACtD,OAAO,IAAIC,KAAK,GAA+BD,SAAS;AACxD,OAAO,IAAIE,OAAO,GAAiCF,SAAS;AAC5D,OAAO,IAAIG,QAAQ,GAAkCH,SAAS;AAC9D,OAAO,IAAII,OAAO,GAAiCJ,SAAS;AAC5D,OAAO,IAAIK,QAAQ,GAAkCL,SAAS;AAC9D,OAAO,IAAIM,IAAI,GAA8BN,SAAS;AACtD,OAAO,IAAIO,IAAI,GAA8BP,SAAS;AACtD,OAAO,IAAIQ,cAAc,GAAwCR,SAAS;AAC1E,OAAO,IAAIS,0BAA0B,GAAoDT,SAAS;AAClG,OAAO,IAAIU,eAAe,GAAyCV,SAAS;AAC5E,OAAO,IAAIW,YAAY,GAAsCX,SAAS;AACtE,OAAO,IAAIY,cAAc,GAAwCZ,SAAS;AAE1E,OAAM,SAAUa,QAAQA,CAACC,KAAY,EAAEC,OAAA,GAA6B;EAAEjB,IAAI,EAAE;AAAK,CAAE;EACjF,IAAIA,IAAI,EAAE;IACR,MAAM,IAAIkB,KAAK,CACb,qCAAqCF,KAAK,CAACf,IAAI,kDAAkD,CAClG;;EAEH,IAAIA,IAAI,EAAE;IACR,MAAM,IAAIiB,KAAK,CACb,kCAAkCF,KAAK,CAACf,IAAI,sCAAsCA,IAAI,KAAK,CAC5F;;EAEHD,IAAI,GAAGiB,OAAO,CAACjB,IAAI;EACnBC,IAAI,GAAGe,KAAK,CAACf,IAAI;EACjBE,KAAK,GAAGa,KAAK,CAACb,KAAK;EACnBC,OAAO,GAAGY,KAAK,CAACZ,OAAO;EACvBC,QAAQ,GAAGW,KAAK,CAACX,QAAQ;EACzBC,OAAO,GAAGU,KAAK,CAACV,OAAO;EACvBC,QAAQ,GAAGS,KAAK,CAACT,QAAQ;EACzBC,IAAI,GAAGQ,KAAK,CAACR,IAAI;EACjBC,IAAI,GAAGO,KAAK,CAACP,IAAI;EACjBC,cAAc,GAAGM,KAAK,CAACN,cAAc;EACrCC,0BAA0B,GAAGK,KAAK,CAACL,0BAA0B;EAC7DC,eAAe,GAAGI,KAAK,CAACJ,eAAe;EACvCC,YAAY,GAAGG,KAAK,CAACH,YAAY;EACjCC,cAAc,GAAGE,KAAK,CAACF,cAAc;AACvC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}